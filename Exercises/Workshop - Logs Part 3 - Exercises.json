{"version":"5","defaultTimeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2023-12-06T20:57:29.654Z"},"to":{"type":"expression","normalized":"now","date":"2023-12-07T20:57:29.654Z"}}},"sections":[{"id":"33cf75d7-ec4f-4fd7-8346-751dc57267cb","type":"markdown","markdown":"## Parsing Logs\n* The DQL **PARSE** command parses a record field and puts the result(s) into one or more fields as specified in the pattern. Parsed fields are added to the previously set of fields and can be used for further processing and analysis.\n\n## Exercise 1\n1.  Fetch logs with the following filters: k8s.container.name == \"server\" and matchesPhrase(content, \"AddItemAsync\") and use the **PARSE** command to extract the quantity from the log content. Return only the quantity and content fields. \n2. Use the **PARSE** command to extract the userId from the logs content and return the userID and content fields.\n3. Use the **PARSE** command to extract the productId from the logs content and return the productId and content fields.\n4. Extract productId, userId and quantity in a single parse command and return all 3 extracted fields."},{"id":"eabe23a0-9ec6-4b9e-b05f-822f87024d96","type":"dql","title":"Exercise 1.1 - Parse quantity","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-2h","to":"now"}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"978b694d-c953-4fa1-8428-2deda606f681","type":"dql","title":"Exercise 1.2 - Parse userId","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-2h","to":"now"}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"f5a239e6-0c3c-4df0-b391-1b2b9db61cc1","type":"dql","title":"Exercise 1.3 - Parse productId","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-2h","to":"now"}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"cbb46723-1953-4a1a-86b7-2fa7493a56d9","type":"dql","title":"Exercise 1.4 - Parse userId, productId, and quantity - 3 parse commands","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-2h","to":"now"}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"15b31918-5101-447f-985f-01a704abc936","type":"dql","title":"Exercise 1.4 - Parse userId, productId, and quantity - 1 parse command","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-2h","to":"now"}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"27405d55-5ca8-424c-8ea5-e008e572bc62","type":"markdown","markdown":"## Putting it all together - Visualizing Parsed Logs\n\n## Exercise 2\n1. Starting with the parsing exercises above, visualize the total number of products purchased in the last 24 hours in a single value visualization. \n2. Visualize the number of products purchased in the last 24 hours over time in a line chart. \n3. Visualize the number of products purchased by product id in the last 24 hours in a pie chart."},{"id":"66466f48-5285-45df-8920-b5bb266ea308","type":"dql","showTitle":false,"title":"Exercise 2.1 - Single Value - Quantity","state":{"input":{"value":"","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2023-12-06T20:57:29.654Z"},"to":{"type":"expression","normalized":"now","date":"2023-12-07T20:57:29.654Z"}}}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"ed0f1187-ac93-4d6d-9a1b-d5432d1a75c3","type":"dql","showTitle":false,"title":"Exercise 2.2 - Line Chart - Quantity over time","state":{"input":{"value":"","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2023-12-06T20:57:29.654Z"},"to":{"type":"expression","normalized":"now","date":"2023-12-07T20:57:29.654Z"}}}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"84528dfe-0d5c-4d69-9932-7c07d17f100e","type":"dql","showTitle":false,"title":"Exercise 2.3 - Pie Chart - Quantity by Product ID","state":{"input":{"value":"","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2023-12-06T20:57:29.654Z"},"to":{"type":"expression","normalized":"now","date":"2023-12-07T20:57:29.654Z"}}}},"davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}},"visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{}},"singleValue":{"colorThresholdTarget":"value","showLabel":true,"label":"","prefixIcon":"","autoscale":true,"alignment":"center"},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"firstVisibleRowIndex":0,"columnWidths":{}}},"state":"idle"}},{"id":"82983013-455c-4467-bb3f-afc8cfe71ce6","type":"markdown","markdown":"## Putting it all together - Dashboarding\n\n## Exercise 3\n1. For each of the visualizations we just created, click open with and add them all to the same dashboard. ![](https://github.com/JasonOstroski/perform-hot24-intro-to-dql/blob/main/images/openwith.jpg?raw=true)![](https://github.com/JasonOstroski/perform-hot24-intro-to-dql/blob/main/images/openwithdashboard.jpg?raw=true)\n2. We want to be able to analyze purchases by product ID, but we don't want to have to modify the query each time. Let's create a variable for product ID. Click the + button in the upper right corner and add a variable. Use the query as the type and write query that just returns productID.(Hint: Previous exercises have some good queries to start with) Allow multi-select and preview results.![](https://github.com/JasonOstroski/perform-hot24-intro-to-dql/blob/main/images/variable.jpg?raw=true)\n\n3. In each query on the dashboard add a filter for product Id. Ex: filter in(productId, $ProductID). Try selecting different product IDs in the variable and see how the charts update. ![](https://github.com/JasonOstroski/perform-hot24-intro-to-dql/blob/main/images/variablequery.jpg?raw=true)\n\n## Finished Dashboard\n[Product Logs Dashboard - Answer](https://guu84124.apps.dynatrace.com/ui/document/v0/#share=c67ed457-fec4-4c28-8bb3-8059d8b30bfe)"},{"id":"03f0a5e8-6c49-4e98-bf0b-75cf8c001b26","type":"markdown","markdown":"## Extra Exercise - Parsing JSON on Read\n1.  Fetch logs with the following filter: ``` | filter k8s.deployment.name == \"frontend-*\" and status == \"NONE\" and matchesPhrase(content, \"request complete\") and NOT matchesPhrase(content, \"JAEGER\") ```\n\n2. Review the JSON structure of the logs (It's a bit easier to visualize in the Logs & Events App)\n3. Use the **PARSE** command to extract the key value pairs (ex: http.req.method, http.req.path, http.resp.bytes, message, session) and create a table with these fields"},{"id":"f2ed08e3-80aa-47e9-be75-e69e63afb990","type":"dql","title":"Extra 1 - Fetch JSON Logs","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2023-12-06T20:57:29.654Z"},"to":{"type":"expression","normalized":"now","date":"2023-12-07T20:57:29.654Z"}}}},"state":"idle","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}},{"id":"34eb6505-3936-4969-a59c-7126e31fc787","type":"dql","title":"Extra 3 - Parse JSON","showTitle":false,"state":{"input":{"value":"","timeframe":{"from":"now-24h","to":"now","details":{"from":{"type":"expression","normalized":"now-24h","date":"2023-12-06T20:57:29.654Z"},"to":{"type":"expression","normalized":"now","date":"2023-12-07T20:57:29.654Z"}}}},"state":"idle","davis":{"includeLogs":true,"davisVisualization":{"isAvailable":true}}}}]}